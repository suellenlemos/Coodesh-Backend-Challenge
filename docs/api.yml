openapi: 3.0.0
info:
  title: Open Food Facts REST API
  description: A REST API for accessing data from the Open Food Facts project, a database of nutritional information on various food products.
  version: 1.0.0
servers:
  - url: 'http://localhost:3000'
    description: Development server

paths:
  /products:
    get:
      summary: Get a list of products
      description: Retrieves a list of products from the database with pagination.
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            example: 1
        - name: per_page
          in: query
          description: Number of products per page
          required: false
          schema:
            type: integer
            example: 10
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  total:
                    type: integer
                    description: Total number of products
        '400':
          description: Bad request
        '500':
          description: Internal server error
    post:
      summary: Create a new product
      description: Creates a new product in the database.
      requestBody:
        description: Product data to create a new product.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Product created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad request.

  /products/insert:
    get:
      summary: Insert products from external source
      description: Downloads, decompresses, and processes files to insert products into the database.
      responses:
        '200':
          description: Products were imported successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Products were imported successfully
        '500':
          description: Failed to process files and insert products into database.

  /products/{code}:
    get:
      summary: Get a product by code
      description: Fetches a product by its code.
      parameters:
        - name: code
          in: path
          required: true
          description: Product code.
          schema:
            type: integer
      responses:
        '200':
          description: Product fetched successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found.
        '500':
          description: An error occurred while fetching the product.
    put:
      summary: Update a product
      description: Updates the details of a specific product identified by its code.
      parameters:
        - name: code
          in: path
          description: Code of the product to update
          required: true
          schema:
            type: integer
      requestBody:
        description: Product update information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: The updated product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad request
        '404':
          description: Product not found
        '500':
          description: Internal server error
    delete:
      summary: Deletes a product
      description: Changes the product status to trash.
      parameters:
        - name: code
          in: path
          required: true
          description: Product code.
          schema:
            type: integer
      responses:
        '200':
          description: Product deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Product was deleted successfully
        '404':
          description: Product not found.
        '500':
          description: An error occurred while deleting the product.

components:
  schemas:
    Product:
      type: object
      properties:
        code:
          type: integer
          example: 1
        status:
          type: string
          example: PUBLISHED
        importedT:
          type: string
          format: date-time
          example: 2024-08-05T22:25:13.846Z
        url:
          type: string
          example: http://example.com/product/1234567890123
        creator:
          type: string
          example: creator@example.com
        createdT:
          type: integer
          example: 1617181920
        lastModifiedT:
          type: integer
          example: 1617181921
        productName:
          type: string
          example: Mock Product
        quantity:
          type: string
          example: 500ml
        brands:
          type: string
          example: Mock Brand
        categories:
          type: string
          example: Mock Category
        labels:
          type: string
          example: Mock Label
        cities:
          type: string
          example: Mock City
        purchasePlaces:
          type: string
          example: Mock Place
        stores:
          type: string
          example: Mock Store
        ingredientsText:
          type: string
          example: Water, Sugar, Mock Ingredient
        traces:
          type: string
          example: Mock Traces
        servingSize:
          type: string
          example: 250ml
        servingQuantity:
          type: integer
          example: 2
        nutriscoreScore:
          type: integer
          example: 10
        nutriscoreGrade:
          type: string
          example: B
        mainCategory:
          type: string
          example: Mock Main Category
        imageUrl:
          type: string
          example: http://example.com/product/1234567890123/image.jpg
